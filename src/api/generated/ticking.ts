/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/ticking/ticking-app/ticking-ads/{tickingAdId}/seller/{sellerId}': {
    put: operations['updateTickingAdSellerState']
  }
  '/ticking/ticking-app/ticking-ads/{tickingAdId}/call-result': {
    put: operations['updateTickingAdStateCallResult']
  }
  '/ticking/ticking-app/ticking-ads/{tickingAdId}/action': {
    put: operations['updateTickingAdStateAction']
  }
  '/ticking/ticking-app/sellers/{sellerId}': {
    put: operations['updateSellerState']
  }
  '/ticking/ticking-app/ticking-ads/{tickingAdId}/notes': {
    post: operations['createNote']
  }
  '/ticking/ticking-app/ticking-ads/search': {
    post: operations['searchTickingAds']
  }
  '/ticking/ticking-app/named-filters': {
    post: operations['create']
  }
  '/ticking/ticking-app/named-filters/search': {
    post: operations['search']
  }
  '/ticking/ticking-app/ticking-ads/{tickingAdId}': {
    patch: operations['patchTickingAd']
  }
}

export interface components {
  schemas: {
    UpdateSellerStateRequest: {
      state: 'WHITELISTED' | 'BLACKLISTED'
    }
    SellerContactResponse: {
      phonePrefix?: string
      phoneNumber?: string
    }
    SellerResponse: {
      /** Format: uuid */
      id: string
      name?: string
      type?: 'COMPANY' | 'PERSON'
      state?: 'WHITELISTED' | 'BLACKLISTED'
      contact?: components['schemas']['SellerContactResponse']
    }
    TickingAdNoteResponse: {
      createdByEmployeeId: string
      content: string
      /** Format: date-time */
      createdAt: string
    }
    TickingAdResponse: {
      /** Format: uuid */
      id: string
      adNo: string
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt: string
      /** Format: date-time */
      downloadedAt?: string
      /** Format: int32 */
      serverId?: number
      adUrl?: string
      makeId?: string
      modelId?: string
      transmissionId?: string
      driveId?: string
      bodyId?: string
      fuelId?: string
      /** Format: int32 */
      speedometerMileageKm?: number
      /** Format: int32 */
      yearOfMake?: number
      /** Format: int32 */
      powerKw?: number
      /** Format: int32 */
      volumeCcm?: number
      profit?: number
      expectedPrice?: number
      recommendedBuyingPrice?: number
      maxBuyingPrice?: number
      predictedPrice?: number
      retailPrice?: number
      tradePrice?: number
      currency?: string
      seller: components['schemas']['SellerResponse']
      webPosition?: number
      /** Format: int32 */
      webPositionLevel?: number
      webPositionPriceList?: number[]
      retailStockTurnover?: number
      /** Format: int32 */
      retailStockTurnoverLevel?: number
      wholesaleStockTurnover?: number
      /** Format: int32 */
      wholesaleStockTurnoverLevel?: number
      marketStockTurnover?: number
      /** Format: int32 */
      marketStockTurnoverLevel?: number
      ads?: string
      /** Format: int32 */
      rank?: number
      /** Format: int32 */
      carGrade?: number
      marketMonitoringCode?: string
      marketMonitoringUrl?: string
      pricingAppUrl?: string
      kpisRefetchState?: 'IN_PROGRESS' | 'SUCCESS' | 'FAILED'
      notes: components['schemas']['TickingAdNoteResponse'][]
      state: components['schemas']['TickingAdStateResponse']
    }
    TickingAdStateResponse: {
      phase:
        | 'NEW_AD'
        | 'TICKED'
        | 'APPOINTMENT_CREATED'
        | 'LOST'
        | 'DUPLICATE'
        | 'BOUGHT'
      action?: 'SMS_ONLY' | 'CALL' | 'HOT_DEAL' | 'NOT_INTERESTED'
      lossReason?: 'NO_ANSWER' | 'OLD_AD' | 'FAKE_AD' | 'MISLEADING_AD' | 'SOLD'
    }
    UpdateTickingAdStateCallResultRequest: {
      phase:
        | 'NEW_AD'
        | 'TICKED'
        | 'APPOINTMENT_CREATED'
        | 'LOST'
        | 'DUPLICATE'
        | 'BOUGHT'
      lossReason?: 'NO_ANSWER' | 'OLD_AD' | 'FAKE_AD' | 'MISLEADING_AD' | 'SOLD'
    }
    UpdateTickingAdStateActionRequest: {
      action: 'SMS_ONLY' | 'CALL' | 'HOT_DEAL' | 'NOT_INTERESTED'
    }
    UpdateSellerStateResponse: {
      /** Format: uuid */
      id: string
      name?: string
      type?: 'COMPANY' | 'PERSON'
      state?: 'WHITELISTED' | 'BLACKLISTED'
      contacts: components['schemas']['SellerContactResponse'][]
    }
    CreateTickingAdNoteRequest: {
      content: string
    }
    TickingAdFilter: {
      makeIds?: string[]
      modelIds?: string[]
      /** Format: int32 */
      yearOfMakeFrom?: number
      /** Format: int32 */
      yearOfMakeTo?: number
      excludeWithoutYearOfMake?: boolean
      /** Format: int32 */
      speedometerMileageKmFrom?: number
      /** Format: int32 */
      speedometerMileageKmTo?: number
      excludeWithoutSpeedometerMileageKm?: boolean
      transmissionIds?: string[]
      bodyIds?: string[]
      carGrades?: number[]
      stateActions?: ('SMS_ONLY' | 'CALL' | 'HOT_DEAL' | 'NOT_INTERESTED')[]
      excludeWithStateAction?: boolean
      fullText?: string
      sellerIds?: string[]
      expectedPriceFrom?: number
      expectedPriceTo?: number
      excludeWithoutExpectedPrice?: boolean
      statePhases?: (
        | 'NEW_AD'
        | 'TICKED'
        | 'APPOINTMENT_CREATED'
        | 'LOST'
        | 'DUPLICATE'
        | 'BOUGHT'
      )[]
      excludeStatePhases?: (
        | 'NEW_AD'
        | 'TICKED'
        | 'APPOINTMENT_CREATED'
        | 'LOST'
        | 'DUPLICATE'
        | 'BOUGHT'
      )[]
      /** Format: date-time */
      downloadedAtFrom?: string
      /** Format: date-time */
      downloadedAtTo?: string
      /** Format: int32 */
      rankFrom?: number
      /** Format: int32 */
      rankTo?: number
      profitFrom?: number
      profitTo?: number
      serverIds?: number[]
      sellerTypes?: ('COMPANY' | 'PERSON')[]
    }
    SimplePageTickingAdResponse: {
      content: components['schemas']['TickingAdResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    CreateNamedFilterRequest: {
      name: string
      makeIds?: string[]
      modelIds?: string[]
      /** Format: int32 */
      yearOfMakeFrom?: number
      /** Format: int32 */
      yearOfMakeTo?: number
      /** Format: int32 */
      speedometerMileageKmFrom?: number
      /** Format: int32 */
      speedometerMileageKmTo?: number
      transmissionIds?: string[]
      bodyIds?: string[]
      actions?: ('SMS_ONLY' | 'CALL' | 'HOT_DEAL' | 'NOT_INTERESTED')[]
      excludeWithAction?: boolean
    }
    NamedFilterResponse: {
      /** Format: uuid */
      id: string
      name: string
      featured: boolean
      createdByEmployeeId: string
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt: string
      makeIds?: string[]
      modelIds?: string[]
      /** Format: int32 */
      yearOfMakeFrom?: number
      /** Format: int32 */
      yearOfMakeTo?: number
      /** Format: int32 */
      speedometerMileageKmFrom?: number
      /** Format: int32 */
      speedometerMileageKmTo?: number
      transmissionIds?: string[]
      bodyIds?: string[]
      actions?: ('SMS_ONLY' | 'CALL' | 'HOT_DEAL' | 'NOT_INTERESTED')[]
      excludeWithAction?: boolean
    }
    SearchNamedFilterRequest: {
      featuredFilter?: boolean
      myFilters?: boolean
    }
    SimplePageNamedFilterResponse: {
      content: components['schemas']['NamedFilterResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    PatchTickingAdRequest: {
      makeId?: string
      modelId?: string
      transmissionId?: string
      driveId?: string
      bodyId?: string
      fuelId?: string
      /** Format: int32 */
      yearOfMake?: number
      /** Format: int32 */
      speedometerMileageKm?: number
      customerType?: 'COMPANY' | 'PERSON'
      customerName?: string
      customerPhone?: string
      /** Format: int32 */
      carGrade?: number
    }
  }
}

export interface operations {
  updateTickingAdSellerState: {
    parameters: {
      path: {
        tickingAdId: string
        sellerId: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TickingAdResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateSellerStateRequest']
      }
    }
  }
  updateTickingAdStateCallResult: {
    parameters: {
      path: {
        tickingAdId: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TickingAdResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateTickingAdStateCallResultRequest']
      }
    }
  }
  updateTickingAdStateAction: {
    parameters: {
      path: {
        tickingAdId: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TickingAdResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateTickingAdStateActionRequest']
      }
    }
  }
  updateSellerState: {
    parameters: {
      path: {
        sellerId: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['UpdateSellerStateResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateSellerStateRequest']
      }
    }
  }
  createNote: {
    parameters: {
      path: {
        tickingAdId: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TickingAdResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateTickingAdNoteRequest']
      }
    }
  }
  searchTickingAds: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTickingAdResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TickingAdFilter']
      }
    }
  }
  create: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['NamedFilterResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateNamedFilterRequest']
      }
    }
  }
  search: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageNamedFilterResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SearchNamedFilterRequest']
      }
    }
  }
  patchTickingAd: {
    parameters: {
      path: {
        tickingAdId: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TickingAdResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PatchTickingAdRequest']
      }
    }
  }
}

export interface external {}

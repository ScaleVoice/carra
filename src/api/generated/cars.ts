/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/internal/cars/opportunity/{opportunityId}': {
    put: operations['createOrUpdateOpportunity']
  }
  '/cars/price-offers/for-car/{carId}/customer-decision': {
    put: operations['specifyCustomerDecisionForCarId']
  }
  '/admin/risk-checks/{riskCheckId}/result': {
    put: operations['updateResultByRiskCheckId']
  }
  '/admin/cars/{carId}/wheels': {
    get: operations['get_1']
    put: operations['createOrUpdate']
  }
  '/admin/cars/{carId}/document-checks': {
    get: operations['get_2']
    put: operations['createOrUpdate_1']
  }
  '/admin/cars/{carId}/costs': {
    get: operations['get_3']
    put: operations['createOrUpdate_2']
  }
  '/admin/cars/{carId}/bonuses-maluses': {
    get: operations['getBonusMalus_1']
    put: operations['createBonusMalus']
  }
  '/admin/cars/{carId}/accident': {
    get: operations['getAccident']
    put: operations['createOrUpdateAccident']
  }
  '/admin/cars/technical-condition-subcategories/{technicalConditionSubCategoryId}': {
    put: operations['updateSubCategory']
  }
  '/admin/cars/technical-condition-sections': {
    put: operations['createOrUpdate_3']
  }
  '/admin/cars/technical-condition-categories': {
    put: operations['createOrUpdate_4']
  }
  '/admin/cars/price-offers/for-car/{carId}': {
    get: operations['getOfferForCarId_1']
    put: operations['updatePriceOffer']
  }
  '/admin/cars/price-offers/for-car/{carId}/customer-decision': {
    put: operations['specifyCustomerDecision']
  }
  '/cars/technical-condition-sections/search-agg': {
    post: operations['searchAgg']
  }
  '/cars/search': {
    post: operations['searchCars']
  }
  '/admin/risk-checks/search': {
    post: operations['searchRiskChecks']
  }
  '/admin/risk-checks/for-opportunity/{opportunityId}': {
    post: operations['uploadForOpportunityId']
  }
  '/admin/cars/{carId}/media': {
    post: operations['upload']
  }
  '/admin/cars/{carId}/documents': {
    post: operations['uploadDocument']
  }
  '/admin/cars/technical-condition-subcategories': {
    post: operations['createSubCategory']
  }
  '/admin/cars/technical-condition-subcategories/search-agg': {
    post: operations['searchAgg_1']
  }
  '/admin/cars/technical-condition-sections/search': {
    post: operations['search']
  }
  '/admin/cars/technical-condition-sections/search-agg': {
    post: operations['searchAgg_2']
  }
  '/admin/cars/technical-condition-items': {
    post: operations['createItem']
  }
  '/admin/cars/technical-condition-items/search': {
    post: operations['searchItems']
  }
  '/admin/cars/technical-condition-items-photos': {
    post: operations['createTechnicalConditionItemPhotos']
  }
  '/admin/cars/technical-condition-items-photos/search': {
    post: operations['searchTechnicalConditionItemPhotos']
  }
  '/admin/cars/technical-condition-categories/search': {
    post: operations['search_1']
  }
  '/admin/cars/technical-condition-categories/search-agg': {
    post: operations['searchAgg_3']
  }
  '/admin/cars/search': {
    post: operations['searchCars_1']
  }
  '/admin/cars/price-offers/search': {
    post: operations['searchPriceOffers']
  }
  '/admin/cars/price-offers/for-car/{carId}/approve': {
    post: operations['approveOfferForCarId']
  }
  '/admin/cars/opportunities/{opportunityId}/escalate': {
    post: operations['sendManualEscalationEmail']
  }
  '/admin/cars/media/search': {
    post: operations['search_2']
  }
  '/admin/cars/for-opportunity': {
    post: operations['initCarForOpportunity']
  }
  '/admin/cars/documents/search': {
    post: operations['searchCarDocuments']
  }
  '/admin/cars/buying-app-tokens/for-car/{carId}/generate': {
    post: operations['generateBuyingAppTokenForCar']
  }
  '/admin/cars/{carId}': {
    get: operations['getCar_2']
    patch: operations['patchCar']
  }
  '/admin/cars/technical-condition-items/{technicalConditionItemId}': {
    delete: operations['deleteItem']
    patch: operations['patchItem']
  }
  '/cars/{carId}': {
    get: operations['getCar']
  }
  '/cars/{carId}/costs': {
    get: operations['get']
  }
  '/cars/{carId}/bonuses-maluses': {
    get: operations['getBonusMalus']
  }
  '/cars/price-offers/for-car/{carId}': {
    get: operations['getOfferForCarId']
  }
  '/cars/auction-app/cars/{carId}': {
    get: operations['getCar_1']
  }
  '/admin/cars/{carId}/buyout-accessibility/{buyoutMode}': {
    get: operations['determineBuyoutAccessibility']
  }
  '/admin/cars/for-opportunity/{opportunityId}': {
    get: operations['getCarsByOpportunityId']
  }
  '/admin/risk-checks/{riskCheckId}': {
    delete: operations['deleteRiskCheck']
  }
  '/admin/cars/technical-condition-items-photos/{photoId}': {
    delete: operations['deleteTechnicalConditionItemPhoto']
  }
  '/admin/cars/technical-condition-categories/{technicalConditionCategoryId}': {
    delete: operations['delete']
  }
  '/admin/cars/media/{mediaId}': {
    delete: operations['delete_1']
  }
  '/admin/cars/documents/{documentId}': {
    delete: operations['deleteDocument']
  }
}

export interface components {
  schemas: {
    CreateOrUpdateOpportunityRequest: {
      state?:
        | 'CAR_BASIC_INFO'
        | 'MISSING_CAR_DATA'
        | 'CAR_FEATURES'
        | 'CAR_CONDITION'
        | 'CAR_QUICKPRICE'
        | 'APP_READY'
        | 'APP_IN_PROGRESS'
        | 'APP_QUICKPRICING'
        | 'APP_FULLPRICING'
        | 'PRICE_GUARANTEE'
        | 'LOST'
        | 'AGREED'
        | 'DEAL'
        | 'APPROVED'
        | 'DISCARDED'
      lossReason?:
        | 'CANCELLED_WITHOUT_REASON'
        | 'NO_INTEREST'
        | 'SEEN_PRICE_DIFFERENCE'
        | 'EXPIRED_PRICE_GUARANTEE'
        | 'NO_SHOW'
        | 'DUPLICITY'
        | 'NOT_RELEVANT'
        | 'FINAL_STAGE'
        | 'CAR_ALREADY_SOLD'
        | 'CALL_BACK'
        | 'SEEN_NO_INTEREST'
        | 'ONLY_INFO'
        | 'NOT_REACHED'
      buyerId?: string
      branchId?: string
      customerWishedPrice?: number
    }
    CustomerDecisionRequest: {
      value: 'ACCEPT' | 'THINK_THROUGH' | 'REQUESTED_REPRICING'
    }
    PriceOfferResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      carId?: string
      offeredPrice: number
      approved: boolean
      customerDecision?: 'ACCEPT' | 'THINK_THROUGH' | 'REQUESTED_REPRICING'
      updatedPrice?: number
    }
    AdminRiskCheckUpdateRequest: {
      result: 'OK' | 'NOT_OK' | 'NOT_APPLICABLE'
    }
    AdminRiskCheckResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      opportunityId: string
      type:
        | 'CARVERTICAL'
        | 'COMPANY'
        | 'TAXATION'
        | 'EXECUTION'
        | 'INSOLVENCY'
        | 'INSOLVENCY_OLD'
        | 'AUTODNA'
        | 'BUSINESS_REGISTER'
      result: 'OK' | 'NOT_OK' | 'NOT_APPLICABLE'
      /** Format: uuid */
      fileId?: string
    }
    WheelInput: {
      position:
        | 'FRONT_LEFT'
        | 'FRONT_RIGHT'
        | 'REAR_LEFT'
        | 'REAR_RIGHT'
        | 'EXTRA_FRONT_LEFT'
        | 'EXTRA_FRONT_RIGHT'
        | 'EXTRA_REAR_LEFT'
        | 'EXTRA_REAR_RIGHT'
      tireSize: string
      /** Format: int32 */
      tireTreadDepthMm: number
      tireSeason?: 'SUMMER' | 'WINTER' | 'ALL_SEASON'
      rimMaterial?: 'ALU_ORIGINAL' | 'ALU_NON_ORIGINAL' | 'SHEET_METAL' | 'NONE'
    }
    WheelDto: {
      /** Format: uuid */
      id: string
      position:
        | 'FRONT_LEFT'
        | 'FRONT_RIGHT'
        | 'REAR_LEFT'
        | 'REAR_RIGHT'
        | 'EXTRA_FRONT_LEFT'
        | 'EXTRA_FRONT_RIGHT'
        | 'EXTRA_REAR_LEFT'
        | 'EXTRA_REAR_RIGHT'
      tireSize: string
      /** Format: int32 */
      tireTreadDepthMm: number
      tireSeason?: 'SUMMER' | 'WINTER' | 'ALL_SEASON'
      rimMaterial?: 'ALU_ORIGINAL' | 'ALU_NON_ORIGINAL' | 'SHEET_METAL' | 'NONE'
    }
    DocumentCheckItemTypeInput: {
      type:
        | 'PERSONAL_ID'
        | 'REG_CERTIFICATE_1'
        | 'REG_CERTIFICATE_2'
        | 'CONFORMITY_CERTIFICATE'
        | 'TECHNICAL_INSPECTION'
        | 'EMISSION_INSPECTION'
        | 'LICENSE_PLATES'
        | 'INSURANCE_NUMBER'
        | 'CAR_TAX'
        | 'POWER_OF_ATTORNEY'
        | 'PURCHASE_INVOICE'
        | 'COMMERCIAL_REGISTER'
        | 'VAT_REGISTRATION'
      present: boolean
    }
    DocumentChecksRequest: {
      carOwnerPresent?: boolean
      checks: components['schemas']['DocumentCheckItemTypeInput'][]
    }
    DocumentCheckItemResponse: {
      type:
        | 'PERSONAL_ID'
        | 'REG_CERTIFICATE_1'
        | 'REG_CERTIFICATE_2'
        | 'CONFORMITY_CERTIFICATE'
        | 'TECHNICAL_INSPECTION'
        | 'EMISSION_INSPECTION'
        | 'LICENSE_PLATES'
        | 'INSURANCE_NUMBER'
        | 'CAR_TAX'
        | 'POWER_OF_ATTORNEY'
        | 'PURCHASE_INVOICE'
        | 'COMMERCIAL_REGISTER'
        | 'VAT_REGISTRATION'
      present?: boolean
    }
    DocumentCheckResponse: {
      carOwnerPresent: boolean
      checks: components['schemas']['DocumentCheckItemResponse'][]
    }
    CarCostsItemRequest: {
      /** Format: uuid */
      id: string
      type: 'OTHER' | 'STANDARD_REPAIR'
      cost: number
      description?: string
      standardRepairId?: string
      categoryId?: string
    }
    CarCostsRequest: {
      comment: string
      items: components['schemas']['CarCostsItemRequest'][]
    }
    CarCostsItemResponse: {
      /** Format: uuid */
      id: string
      type: 'OTHER' | 'STANDARD_REPAIR'
      cost: number
      description?: string
      standardRepairId?: string
      categoryId?: string
    }
    CarCostsResponse: {
      comment: string
      totalOtherCosts: number
      items: components['schemas']['CarCostsItemResponse'][]
    }
    AccidentInput: {
      present: boolean
      front?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
      rear?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
      left?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
      right?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
      roof?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
    }
    AccidentResponse: {
      present: boolean
      front?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
      rear?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
      left?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
      right?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
      roof?: 'NONE' | 'PAINT' | 'LIGHT' | 'MEDIUM' | 'BAD'
    }
    UpdateTechnicalConditionSubCategoryCommand: {
      repairCosts?: number
      repairComment?: string
    }
    TechnicalConditionSubCategoryResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      carId?: string
      subCategoryId: string
      repairCosts?: number
      repairComment?: string
    }
    CreateOrUpdateTechnicalConditionSectionCommand: {
      /** Format: uuid */
      carId: string
      sectionId: string
      /** Format: int32 */
      rating: number
    }
    TechnicalConditionSectionResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      carId?: string
      sectionId: string
      /** Format: int32 */
      rating: number
    }
    CreateOrUpdateTechnicalConditionCategoryCommand: {
      /** Format: uuid */
      carId: string
      categoryId: string
      checked: boolean
    }
    TechnicalConditionCategoryResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      carId?: string
      categoryId: string
      checked: boolean
    }
    UpdatePriceOfferRequest: {
      updatedPrice: number
    }
    TechnicalConditionSectionSearchAggProjectionResponse: {
      sectionId: string
      /** Format: int32 */
      problematicItemsCount: number
      hasItemNotes: boolean
      repairCosts?: number
      /** Format: uuid */
      id: string
      /** Format: int32 */
      rating?: number
    }
    TechnicalConditionSectionSearchAggResponse: {
      sums: components['schemas']['TechnicalConditionSectionSearchAggSumsResponse']
      sections: components['schemas']['TechnicalConditionSectionSearchAggProjectionResponse'][]
    }
    TechnicalConditionSectionSearchAggSumsResponse: {
      totalRepairCosts: number
    }
    CarSearchFilter: {
      ids: string[]
    }
    CarSearchResponse: {
      /** Format: uuid */
      id: string
      makeId?: string
      modelId?: string
      engineId?: string
      /** Format: int32 */
      yearOfMake?: number
      /** Format: int32 */
      speedometerMileageKm?: number
      fuelTypeId?: string
      vin?: string
      licensePlate?: string
      originCountryId?: string
    }
    SimplePageCarSearchResponse: {
      content: components['schemas']['CarSearchResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    AdminRiskCheckSearchFilter: {
      ids: string[]
      opportunityIds?: string[]
      types: (
        | 'CARVERTICAL'
        | 'COMPANY'
        | 'TAXATION'
        | 'EXECUTION'
        | 'INSOLVENCY'
        | 'INSOLVENCY_OLD'
        | 'AUTODNA'
        | 'BUSINESS_REGISTER'
      )[]
      results: ('OK' | 'NOT_OK' | 'NOT_APPLICABLE')[]
    }
    SimplePageAdminRiskCheckResponse: {
      content: components['schemas']['AdminRiskCheckResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    UploadRiskCheckCommand: {
      /** Format: uuid */
      temporaryFileId?: string
      type:
        | 'CARVERTICAL'
        | 'COMPANY'
        | 'TAXATION'
        | 'EXECUTION'
        | 'INSOLVENCY'
        | 'INSOLVENCY_OLD'
        | 'AUTODNA'
        | 'BUSINESS_REGISTER'
      result: 'OK' | 'NOT_OK' | 'NOT_APPLICABLE'
    }
    UploadCarMediaRequest: {
      /** Format: uuid */
      temporaryFileId: string
      type:
        | 'PHOTO_EXT_FRONT_RIGHT'
        | 'PHOTO_EXT_FRONT'
        | 'PHOTO_EXT_FRONT_LEFT'
        | 'PHOTO_EXT_REAR_RIGHT'
        | 'PHOTO_EXT_REAR'
        | 'PHOTO_EXT_REAR_LEFT'
        | 'PHOTO_INT_SEATS_DRIVER'
        | 'PHOTO_INT_SEATS_CO_DRIVER'
        | 'PHOTO_INT_SEATS_REAR'
        | 'PHOTO_INT_CENTRAL_PANEL'
        | 'PHOTO_INT_SPEEDOMETER'
        | 'PHOTO_ENGINE_BAY'
        | 'PHOTO_TRUNK'
        | 'PHOTO_SPARE_WHEEL'
        | 'PHOTO_VIN_LABEL'
        | 'PHOTO_VIN'
        | 'PHOTO_TIRES'
        | 'PHOTO_OTHER'
        | 'VIDEO_RUNNING_ENGINE'
    }
    CarMediaResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      carId?: string
      type:
        | 'PHOTO_EXT_FRONT_RIGHT'
        | 'PHOTO_EXT_FRONT'
        | 'PHOTO_EXT_FRONT_LEFT'
        | 'PHOTO_EXT_REAR_RIGHT'
        | 'PHOTO_EXT_REAR'
        | 'PHOTO_EXT_REAR_LEFT'
        | 'PHOTO_INT_SEATS_DRIVER'
        | 'PHOTO_INT_SEATS_CO_DRIVER'
        | 'PHOTO_INT_SEATS_REAR'
        | 'PHOTO_INT_CENTRAL_PANEL'
        | 'PHOTO_INT_SPEEDOMETER'
        | 'PHOTO_ENGINE_BAY'
        | 'PHOTO_TRUNK'
        | 'PHOTO_SPARE_WHEEL'
        | 'PHOTO_VIN_LABEL'
        | 'PHOTO_VIN'
        | 'PHOTO_TIRES'
        | 'PHOTO_OTHER'
        | 'VIDEO_RUNNING_ENGINE'
      /** Format: uuid */
      fileId?: string
    }
    UploadCarDocumentCommand: {
      documentTypeId: string
      documentTypeLibraryCode: string
      /** Format: uuid */
      tempFileId: string
    }
    CarDocumentResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      carId?: string
      documentTypeId: string
      documentTypeLibraryCode?: string
      /** Format: uuid */
      fileId?: string
      /** Format: date-time */
      createdAt: string
    }
    CreateTechnicalConditionSubCategoryCommand: {
      /** Format: uuid */
      carId: string
      subCategoryId: string
      /** @deprecated */
      repairCosts?: number
      /** @deprecated */
      repairComment?: string
    }
    SearchTechnicalConditionSubCategoryAggQuery: {
      /** Format: uuid */
      carId: string
      categoryId: string
    }
    TechnicalConditionSubCategorySearchAggProjectionResponse: {
      /** Format: uuid */
      id: string
      subCategoryId: string
      hasItemPhotos: boolean
      repairCosts?: number
    }
    TechnicalConditionSubCategorySearchAggResponse: {
      sums: components['schemas']['TechnicalConditionSubCategorySearchAggSumsResponse']
      subCategories: components['schemas']['TechnicalConditionSubCategorySearchAggProjectionResponse'][]
    }
    TechnicalConditionSubCategorySearchAggSumsResponse: {
      totalRepairCosts: number
    }
    SearchTechnicalConditionSectionFilter: {
      carIds: string[]
    }
    SimplePageTechnicalConditionSectionSearchResponse: {
      content: components['schemas']['TechnicalConditionSectionSearchResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages?: number
    }
    TechnicalConditionSectionSearchResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      carId?: string
      sectionId: string
      /** Format: int32 */
      rating: number
    }
    SearchTechnicalConditionSectionAggQuery: {
      /** Format: uuid */
      carId: string
    }
    CreateTechnicalConditionItemCommand: {
      /** Format: uuid */
      carId: string
      subCategoryId: string
      itemId?: string
      customItemDescription?: string
      note?: string
      expectedRepairCostEur?: number
      repairState: 'DO_NOT_REPAIR' | 'REPAIR'
      tempFileIds: string[]
    }
    TechnicalConditionItemPhotoResponse: {
      /** Format: uuid */
      id?: string
      /** Format: uuid */
      fileId?: string
      temporaryUrl?: string
    }
    TechnicalConditionItemResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      carId?: string
      subCategoryId: string
      itemId?: string
      customItemDescription?: string
      note?: string
      expectedRepairCostEur?: number
      repairState: 'DO_NOT_REPAIR' | 'REPAIR'
      sectionId?: string
      categoryId?: string
      photos: components['schemas']['TechnicalConditionItemPhotoResponse'][]
    }
    TechnicalConditionItemFilterRequest: {
      ids: string[]
      carIds?: string[]
      subCategoryIds: string[]
    }
    SimplePageTechnicalConditionItemResponse: {
      content: components['schemas']['TechnicalConditionItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    CreateTechnicalConditionItemPhotosCommand: {
      /** Format: uuid */
      technicalConditionItemId: string
      tempFileIds: string[]
    }
    CreateTechnicalConditionItemPhotosResponse: {
      photos: components['schemas']['TechnicalConditionItemPhotoResponse'][]
    }
    TechnicalConditionItemPhotoFilter: {
      ids: string[]
      technicalConditionItemIds?: string[]
    }
    SimplePageTechnicalConditionItemPhotoResponse: {
      content: components['schemas']['TechnicalConditionItemPhotoResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    TechnicalConditionCategoryFilter: {
      carIds: string[]
    }
    SimplePageTechnicalConditionCategoryResponse: {
      content: components['schemas']['TechnicalConditionCategoryResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    SearchTechnicalConditionCategoryAggQuery: {
      /** Format: uuid */
      carId: string
      sectionId: string
    }
    TechnicalConditionCategorySearchAggProjectionResponse: {
      /** Format: uuid */
      id: string
      categoryId: string
      problemsFound?: boolean
      /** Format: int32 */
      problematicItemsCount: number
      hasItemPhotos: boolean
      hasRepairNotes?: boolean
      repairCosts?: number
    }
    TechnicalConditionCategorySearchAggResponse: {
      sums: components['schemas']['TechnicalConditionCategorySearchAggSumsResponse']
      categories: components['schemas']['TechnicalConditionCategorySearchAggProjectionResponse'][]
    }
    TechnicalConditionCategorySearchAggSumsResponse: {
      totalRepairCosts: number
    }
    AdminSearchCarsFilter: {
      ids: string[]
      opportunityIds?: string[]
      fullText?: string
      fullTextArgs: string[]
    }
    CarDto: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      opportunityId?: string
      vin?: string
      licensePlate?: string
      makeId?: string
      modelId?: string
      extendedModelId?: string
      modelLineId?: string
      bodyId?: string
      /** Format: int32 */
      doorsCount?: number
      /** Format: int32 */
      seatsCount?: number
      fuelTypeId?: string
      engineId?: string
      transmissionId?: string
      /** Format: int32 */
      gearsCount?: number
      driveId?: string
      metallicColor?: boolean
      colorId?: string
      originCountryId?: string
      /** Format: int32 */
      ownersCount?: number
      /** Format: int32 */
      yearOfMake?: number
      /** Format: date */
      firstRegistrationDate?: string
      /** Format: int32 */
      speedometerMileageKm?: number
      /** Format: int32 */
      actualMileageKm?: number
      serviceBook?: components['schemas']['ServiceBookDto']
      /** Format: date */
      factoryWarrantyUntilDate?: string
      /** Format: int32 */
      factoryWarrantyUntilMileageKm?: number
      van?: components['schemas']['VanDto']
      features: string[]
      createdByEmployeeId?: string
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt?: string
      /** Format: date */
      technicalInspectionValidityUntilDate?: string
      /** Format: date */
      pressureTankExpirationDate?: string
      vatDeductible?: boolean
      /** Format: int32 */
      keysCount?: number
      /** Format: int32 */
      otherKeysCount?: number
      /** @deprecated */
      alternativeFuelTypeId?: string
      additionalFuelTypeId?: string
      bonusMalusChecked: boolean
      /** Format: date */
      fuelTankRevisionDate?: string
      vehicleRegCertificateI?: string
      vehicleRegCertificateII?: string
      reserveWheel?: boolean
      repairKit?: boolean
      vinConfirmation?: string
      deregistered?: boolean
      newWhenLastAuctioned?: boolean
      emissionNormId?: string
      towbar?: 'NONE' | 'ELECTRIC' | 'MANUAL'
      /** Format: int32 */
      towbarPayload?: number
      /** Format: int32 */
      co2EmissionsGramsPerKm?: number
      /** Format: int32 */
      kerbWeightKg?: number
    }
    ServiceBookDto: {
      type: 'NONE' | 'PAPER' | 'ELECTRONIC'
      /** Format: date */
      lastServicingDate: string
      /** Format: int32 */
      lastMileage: number
    }
    SimplePageCarDto: {
      content: components['schemas']['CarDto'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    VanDto: {
      /** Format: int32 */
      widthMm?: number
      /** Format: int32 */
      lengthMm?: number
      /** Format: int32 */
      heightMm?: number
      lengthId: string
      heightId?: string
    }
    AdminPriceOfferSearchFilter: {
      ids: string[]
      carIds?: string[]
      carOpportunityIds?: string[]
      active?: boolean
      approved?: boolean
      includeWithoutCustomerDecision: boolean
      customerDecisions: ('ACCEPT' | 'THINK_THROUGH' | 'REQUESTED_REPRICING')[]
    }
    AdminPriceOfferSearchResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      carId?: string
      /** Format: uuid */
      carOpportunityId?: string
      offeredPrice: number
      approved: boolean
      active?: boolean
      customerDecision?: 'ACCEPT' | 'THINK_THROUGH' | 'REQUESTED_REPRICING'
      updatedPrice?: number
    }
    SimplePageAdminPriceOfferSearchResponse: {
      content: components['schemas']['AdminPriceOfferSearchResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    CarMediaSearchFilter: {
      carIds: string[]
    }
    SimplePageCarMediaResponse: {
      content: components['schemas']['CarMediaResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    InitCarForOpportunityCommand: {
      /** Format: uuid */
      opportunityId: string
      vin: string
    }
    CarDocumentSearchFilter: {
      ids: string[]
      carIds?: string[]
      documentTypeIds: string[]
      documentTypeLibraryCodes?: string[]
    }
    SimplePageCarDocumentResponse: {
      content: components['schemas']['CarDocumentResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    BuyingAppTokenResponse: {
      /** Format: uuid */
      carId: string
      /** Format: uuid */
      opportunityId?: string
      token: string
    }
    PatchCarCommand: {
      licensePlate?: string
      vin?: string
      makeId?: string
      modelId?: string
      extendedModelId?: string
      modelLineId?: string
      bodyId?: string
      /** Format: int32 */
      doorsCount?: number
      /** Format: int32 */
      seatsCount?: number
      engineId?: string
      transmissionId?: string
      /** Format: int32 */
      gearsCount?: number
      driveId?: string
      metallicColor?: boolean
      colorId?: string
      originCountryId?: string
      /** Format: int32 */
      ownersCount?: number
      /** Format: int32 */
      yearOfMake?: number
      /** Format: date */
      firstRegistrationDate?: string
      /** Format: int32 */
      speedometerMileageKm?: number
      /** Format: int32 */
      actualMileageKm?: number
      serviceBook?: components['schemas']['ServiceBookInputObsolete']
      /** Format: date */
      factoryWarrantyUntilDate?: string
      /** Format: int32 */
      factoryWarrantyUntilMileageKm?: number
      van?: components['schemas']['VanInput']
      features: string[]
      /** Format: date */
      technicalInspectionValidityUntilDate?: string
      /** Format: date */
      pressureTankExpirationDate?: string
      vatDeductible?: boolean
      /** Format: int32 */
      keysCount?: number
      /** Format: int32 */
      otherKeysCount?: number
      additionalFuelTypeId?: string
      /** Format: date */
      fuelTankRevisionDate?: string
      vehicleRegCertificateI?: string
      vehicleRegCertificateII?: string
      reserveWheel?: boolean
      repairKit?: boolean
      vinConfirmation?: string
      sellingPriceEur?: number
      deregistered?: boolean
      buyoutPriceNoVatEur?: number
      stockNo?: string
      emissionNormId?: string
      towbar?: 'NONE' | 'ELECTRIC' | 'MANUAL'
      /** Format: int32 */
      towbarPayload?: number
      purchaseDealCompleted?: boolean
      /** Format: int32 */
      co2EmissionsGramsPerKm?: number
      /** Format: int32 */
      kerbWeightKg?: number
    }
    ServiceBookInputObsolete: {
      type?: 'NONE' | 'PAPER' | 'ELECTRONIC'
      /** Format: date */
      lastServicingDate?: string
      /** Format: int32 */
      lastMileage?: number
    }
    VanInput: {
      /** Format: int32 */
      widthMm?: number
      /** Format: int32 */
      lengthMm?: number
      /** Format: int32 */
      heightMm?: number
      lengthId?: string
      heightId?: string
    }
    PatchTechnicalConditionItemRequest: {
      customItemDescription?: string
      note?: string
      expectedRepairCostEur?: number
      repairState?: 'DO_NOT_REPAIR' | 'REPAIR'
      tempFileIds: string[]
    }
    AuctionAppGetCarResponse: {
      car: components['schemas']['CarDto']
      media: components['schemas']['CarMediaResponse'][]
      accident: components['schemas']['AccidentResponse']
      costs: components['schemas']['CarCostsResponse']
      wheels: components['schemas']['WheelDto'][]
      bonusesMaluses: string[]
      technicalConditionSections: components['schemas']['TechnicalConditionSectionSearchAggResponse']
      technicalConditionCategories: components['schemas']['TechnicalConditionCategorySearchAggResponse']
      technicalConditionSubcategories: components['schemas']['TechnicalConditionSubCategorySearchAggResponse']
      technicalConditionItems: components['schemas']['TechnicalConditionItemResponse'][]
    }
    BuyoutAccessibilityResponse: {
      accessibleSections: (
        | 'CAR_IDENTIFICATION'
        | 'DOCUMENT_CHECKS'
        | 'MEDIA'
        | 'FEATURES'
        | 'CONDITIONS_AND_ACCIDENT'
        | 'BONUSES_MALUSES'
        | 'KEYS_AND_TIRES'
        | 'OTHER_COSTS'
      )[]
      readyForPricing: boolean
    }
  }
}

export interface operations {
  createOrUpdateOpportunity: {
    parameters: {
      path: {
        opportunityId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: unknown
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateOpportunityRequest']
      }
    }
  }
  specifyCustomerDecisionForCarId: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['PriceOfferResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CustomerDecisionRequest']
      }
    }
  }
  updateResultByRiskCheckId: {
    parameters: {
      path: {
        riskCheckId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AdminRiskCheckResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AdminRiskCheckUpdateRequest']
      }
    }
  }
  get_1: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['WheelDto'][]
        }
      }
    }
  }
  createOrUpdate: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['WheelDto'][]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['WheelInput'][]
      }
    }
  }
  get_2: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['DocumentCheckResponse']
        }
      }
    }
  }
  createOrUpdate_1: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['DocumentCheckResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['DocumentChecksRequest']
      }
    }
  }
  get_3: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['CarCostsResponse']
        }
      }
    }
  }
  createOrUpdate_2: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['CarCostsResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CarCostsRequest']
      }
    }
  }
  getBonusMalus_1: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': string[]
        }
      }
    }
  }
  createBonusMalus: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': string[]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': string[]
      }
    }
  }
  getAccident: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AccidentResponse']
        }
      }
    }
  }
  createOrUpdateAccident: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AccidentResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AccidentInput']
      }
    }
  }
  updateSubCategory: {
    parameters: {
      path: {
        technicalConditionSubCategoryId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TechnicalConditionSubCategoryResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateTechnicalConditionSubCategoryCommand']
      }
    }
  }
  createOrUpdate_3: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TechnicalConditionSectionResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateTechnicalConditionSectionCommand']
      }
    }
  }
  createOrUpdate_4: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['TechnicalConditionCategoryResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateTechnicalConditionCategoryCommand']
      }
    }
  }
  getOfferForCarId_1: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['PriceOfferResponse']
        }
      }
    }
  }
  updatePriceOffer: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['PriceOfferResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdatePriceOfferRequest']
      }
    }
  }
  specifyCustomerDecision: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['PriceOfferResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CustomerDecisionRequest']
      }
    }
  }
  searchAgg: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TechnicalConditionSectionSearchAggResponse']
          'application/com.driverama-v2+json': components['schemas']['TechnicalConditionSectionSearchAggResponse']
        }
      }
    }
  }
  searchCars: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarSearchResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CarSearchFilter']
      }
    }
  }
  searchRiskChecks: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageAdminRiskCheckResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AdminRiskCheckSearchFilter']
      }
    }
  }
  uploadForOpportunityId: {
    parameters: {
      path: {
        opportunityId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['AdminRiskCheckResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UploadRiskCheckCommand']
      }
    }
  }
  upload: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['CarMediaResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UploadCarMediaRequest']
      }
    }
  }
  uploadDocument: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['CarDocumentResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UploadCarDocumentCommand']
      }
    }
  }
  createSubCategory: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TechnicalConditionSubCategoryResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateTechnicalConditionSubCategoryCommand']
      }
    }
  }
  searchAgg_1: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['TechnicalConditionSubCategorySearchAggResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SearchTechnicalConditionSubCategoryAggQuery']
      }
    }
  }
  search: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTechnicalConditionSectionSearchResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SearchTechnicalConditionSectionFilter']
      }
    }
  }
  searchAgg_2: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['TechnicalConditionSectionSearchAggResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SearchTechnicalConditionSectionAggQuery']
      }
    }
  }
  createItem: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['TechnicalConditionItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateTechnicalConditionItemCommand']
      }
    }
  }
  searchItems: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['SimplePageTechnicalConditionItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TechnicalConditionItemFilterRequest']
      }
    }
  }
  createTechnicalConditionItemPhotos: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CreateTechnicalConditionItemPhotosResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateTechnicalConditionItemPhotosCommand']
      }
    }
  }
  searchTechnicalConditionItemPhotos: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTechnicalConditionItemPhotoResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TechnicalConditionItemPhotoFilter']
      }
    }
  }
  search_1: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTechnicalConditionCategoryResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TechnicalConditionCategoryFilter']
      }
    }
  }
  searchAgg_3: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['TechnicalConditionCategorySearchAggResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['SearchTechnicalConditionCategoryAggQuery']
      }
    }
  }
  searchCars_1: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarDto']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AdminSearchCarsFilter']
      }
    }
  }
  searchPriceOffers: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageAdminPriceOfferSearchResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AdminPriceOfferSearchFilter']
      }
    }
  }
  approveOfferForCarId: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['PriceOfferResponse']
        }
      }
    }
  }
  sendManualEscalationEmail: {
    parameters: {
      path: {
        opportunityId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** Accepted */
      202: unknown
    }
  }
  search_2: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarMediaResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CarMediaSearchFilter']
      }
    }
  }
  initCarForOpportunity: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarDto']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['InitCarForOpportunityCommand']
      }
    }
  }
  searchCarDocuments: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarDocumentResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CarDocumentSearchFilter']
      }
    }
  }
  generateBuyingAppTokenForCar: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['BuyingAppTokenResponse']
        }
      }
    }
  }
  getCar_2: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarDto']
        }
      }
    }
  }
  patchCar: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarDto']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PatchCarCommand']
      }
    }
  }
  deleteItem: {
    parameters: {
      path: {
        technicalConditionItemId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': { [key: string]: unknown }
        }
      }
    }
  }
  patchItem: {
    parameters: {
      path: {
        technicalConditionItemId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v2+json': components['schemas']['TechnicalConditionItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PatchTechnicalConditionItemRequest']
      }
    }
  }
  getCar: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarDto']
        }
      }
    }
  }
  get: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarCostsResponse']
          'application/com.driverama-v2+json': components['schemas']['CarCostsResponse']
        }
      }
    }
  }
  getBonusMalus: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': string[]
        }
      }
    }
  }
  getOfferForCarId: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['PriceOfferResponse']
        }
      }
    }
  }
  getCar_1: {
    parameters: {
      path: {
        carId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AuctionAppGetCarResponse']
        }
      }
    }
  }
  determineBuyoutAccessibility: {
    parameters: {
      path: {
        carId: string
        buyoutMode: 'FULL_PRICE' | 'ONLY_INFO'
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['BuyoutAccessibilityResponse']
        }
      }
    }
  }
  getCarsByOpportunityId: {
    parameters: {
      path: {
        opportunityId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarDto'][]
        }
      }
    }
  }
  deleteRiskCheck: {
    parameters: {
      path: {
        riskCheckId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': { [key: string]: unknown }
        }
      }
    }
  }
  deleteTechnicalConditionItemPhoto: {
    parameters: {
      path: {
        photoId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: unknown
    }
  }
  delete: {
    parameters: {
      path: {
        technicalConditionCategoryId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': { [key: string]: unknown }
        }
      }
    }
  }
  delete_1: {
    parameters: {
      path: {
        mediaId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': { [key: string]: unknown }
        }
      }
    }
  }
  deleteDocument: {
    parameters: {
      path: {
        documentId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': { [key: string]: unknown }
        }
      }
    }
  }
}

export interface external {}

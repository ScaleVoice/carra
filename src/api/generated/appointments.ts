/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/admin/appointments/booking-unavailability/{appointmentBookingUnavailabilityId}': {
    get: operations['getAppointmentBookingUnavailability']
    put: operations['updateAppointmentBookingUnavailability']
    delete: operations['deleteAppointmentBookingUnavailability']
  }
  '/admin/appointments/slots/for-branch/{branchId}/search': {
    post: operations['searchAppointmentSlotsForBranch']
  }
  '/admin/appointments/search': {
    post: operations['search']
  }
  '/admin/appointments/booking-unavailability': {
    post: operations['createAppointmentBookingUnavailability']
  }
}

export interface components {
  schemas: {
    UpdateAppointmentBookingUnavailabilityCommand: {
      appointmentType: 'BUYOUT'
      location: 'MOBILE' | 'BRANCH'
      branchId: string
      /** Format: date */
      from: string
      /** Format: date */
      to: string
    }
    AppointmentBookingUnavailabilityResponse: {
      /** Format: uuid */
      id: string
      appointmentType: 'BUYOUT'
      location: 'MOBILE' | 'BRANCH'
      branchId: string
      /** Format: date */
      from: string
      /** Format: date */
      to?: string
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt?: string
    }
    AppointmentSlotFilter: {
      /** Format: date */
      dateFrom: string
      /** Format: date */
      dateTo: string
      types: 'BUYOUT'[]
      bookingSlotCapacityRelevances: ('BLOCKING' | 'NON_BLOCKING')[]
      employeeIds: string[]
      includeWithoutEmployeeId: boolean
    }
    AppointmentSlotFilterWrapper: {
      filter: components['schemas']['AppointmentSlotFilter']
    }
    AdminBookingSlotResponse: {
      from: components['schemas']['LocalTime']
      to?: components['schemas']['LocalTime']
      state?: 'BOOKED' | 'FREE' | 'UNAVAILABLE' | 'PARTIALLY_UNAVAILABLE'
      appointments: components['schemas']['BookedAppointmentInfoDto'][]
      bookingUnavailabilities: components['schemas']['BookingUnavailabilityResponse'][]
    }
    AdminDailyScheduleResponse: {
      /** Format: date */
      date: string
      slots: components['schemas']['AdminBookingSlotResponse'][]
    }
    AppointmentMetadataResponse: {
      /** Format: uuid */
      opportunityId?: string
      /** Format: uuid */
      orderId?: string
      opportunityState?:
        | 'CAR_BASIC_INFO'
        | 'MISSING_CAR_DATA'
        | 'CAR_FEATURES'
        | 'CAR_CONDITION'
        | 'CAR_QUICKPRICE'
        | 'APP_READY'
        | 'APP_IN_PROGRESS'
        | 'APP_QUICKPRICING'
        | 'APP_FULLPRICING'
        | 'PRICE_GUARANTEE'
        | 'AGREED'
        | 'DEAL'
        | 'APPROVED'
        | 'LOST'
        | 'DISCARDED'
      opportunityLossReason?:
        | 'CANCELLED_WITHOUT_REASON'
        | 'NO_INTEREST'
        | 'SEEN_PRICE_DIFFERENCE'
        | 'EXPIRED_PRICE_GUARANTEE'
        | 'NO_SHOW'
        | 'DUPLICITY'
        | 'NOT_RELEVANT'
        | 'FINAL_STAGE'
        | 'CAR_ALREADY_SOLD'
        | 'CALL_BACK'
        | 'SEEN_NO_INTEREST'
        | 'ONLY_INFO'
        | 'NOT_REACHED'
      auctionState?:
        | 'READY_TO_START'
        | 'IN_PROGRESS'
        | 'SUCCESSFUL'
        | 'FAILED'
        | 'CANCELLED'
        | 'SUCCESSFUL_WINNER_CHANGED'
      opportunityReadyToTransport?: boolean
      opportunitySwap?: boolean
      /** Format: uuid */
      carStockId?: string
    }
    BookedAppointmentInfoDto: {
      appointmentType: 'BUYOUT'
      metadata: components['schemas']['AppointmentMetadataResponse']
    }
    BookingUnavailabilityResponse: {
      /** Format: uuid */
      id: string
      appointmentType: 'BUYOUT'
      location: 'MOBILE' | 'BRANCH'
    }
    LocalTime: {
      /** Format: int32 */
      hour: number
      /** Format: int32 */
      minute?: number
      /** Format: int32 */
      second?: number
      /** Format: int32 */
      nano?: number
    }
    AppointmentSearchFilter: {
      types: 'BUYOUT'[]
      locations: ('MOBILE' | 'BRANCH')[]
      branchIds: string[]
      /** Format: date */
      dateFrom?: string
      /** Format: date */
      dateTo?: string
      employeeIds?: string[]
      includeWithoutEmployee: boolean
      excludeWithEmployee?: boolean
      customerIds: string[]
      includeWithoutCustomer?: boolean
      opportunityStates: (
        | 'CAR_BASIC_INFO'
        | 'MISSING_CAR_DATA'
        | 'CAR_FEATURES'
        | 'CAR_CONDITION'
        | 'CAR_QUICKPRICE'
        | 'APP_READY'
        | 'APP_IN_PROGRESS'
        | 'APP_QUICKPRICING'
        | 'APP_FULLPRICING'
        | 'PRICE_GUARANTEE'
        | 'AGREED'
        | 'DEAL'
        | 'APPROVED'
        | 'LOST'
        | 'DISCARDED'
      )[]
      opportunityLossReasons: (
        | 'CANCELLED_WITHOUT_REASON'
        | 'NO_INTEREST'
        | 'SEEN_PRICE_DIFFERENCE'
        | 'EXPIRED_PRICE_GUARANTEE'
        | 'NO_SHOW'
        | 'DUPLICITY'
        | 'NOT_RELEVANT'
        | 'FINAL_STAGE'
        | 'CAR_ALREADY_SOLD'
        | 'CALL_BACK'
        | 'SEEN_NO_INTEREST'
        | 'ONLY_INFO'
        | 'NOT_REACHED'
      )[]
      auctionStates: (
        | 'READY_TO_START'
        | 'IN_PROGRESS'
        | 'SUCCESSFUL'
        | 'FAILED'
        | 'CANCELLED'
        | 'SUCCESSFUL_WINNER_CHANGED'
      )[]
      opportunityReadyToTransport?: boolean
      includeWithoutOpportunityReadyToTransport?: boolean
      opportunitySwap?: boolean
      opportunityIdsOrCustomerIds?: string[]
    }
    AddressDto: {
      address: string
      postCode?: string
      town?: string
    }
    AppointmentResponse: {
      /** Format: uuid */
      id: string
      type: 'BUYOUT'
      employeeId?: string
      /** Format: uuid */
      customerId?: string
      location: 'MOBILE' | 'BRANCH'
      /** Format: date */
      date: string
      bookingSlotCapacityRelevance: 'BLOCKING' | 'NON_BLOCKING'
      /** Format: HH:mm */
      timeLocal: string
      address?: components['schemas']['AddressDto']
      branchId?: string
      metadata: components['schemas']['AppointmentMetadataResponse']
    }
    SimplePageAppointmentResponse: {
      content: components['schemas']['AppointmentResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    CreateAppointmentBookingUnavailabilityCommand: {
      appointmentType: 'BUYOUT'
      location: 'MOBILE' | 'BRANCH'
      branchId: string
      /** Format: date */
      from: string
      /** Format: date */
      to: string
    }
  }
}

export interface operations {
  getAppointmentBookingUnavailability: {
    parameters: {
      path: {
        appointmentBookingUnavailabilityId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AppointmentBookingUnavailabilityResponse']
        }
      }
    }
  }
  updateAppointmentBookingUnavailability: {
    parameters: {
      path: {
        appointmentBookingUnavailabilityId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AppointmentBookingUnavailabilityResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UpdateAppointmentBookingUnavailabilityCommand']
      }
    }
  }
  deleteAppointmentBookingUnavailability: {
    parameters: {
      path: {
        appointmentBookingUnavailabilityId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  searchAppointmentSlotsForBranch: {
    parameters: {
      path: {
        branchId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AdminDailyScheduleResponse'][]
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AppointmentSlotFilterWrapper']
      }
    }
  }
  search: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageAppointmentResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AppointmentSearchFilter']
      }
    }
  }
  createAppointmentBookingUnavailability: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AppointmentBookingUnavailabilityResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateAppointmentBookingUnavailabilityCommand']
      }
    }
  }
}

export interface external {}

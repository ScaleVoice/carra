/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/common-lovs/transmissions': {
    get: operations['getTransmissions']
    put: operations['createOrUpdate']
  }
  '/common-lovs/transmissions/{transmissionId}': {
    put: operations['createOrUpdate_1']
  }
  '/common-lovs/drives/{carDriveId}': {
    put: operations['createOrUpdate_2']
  }
  '/common-lovs/drives': {
    get: operations['getCarDrives']
    put: operations['createOrUpdate_3']
  }
  '/common-lovs/car-types': {
    get: operations['getCarTypes']
    put: operations['createOrUpdate_4']
  }
  '/common-lovs/car-types/{carTypeId}': {
    put: operations['createOrUpdate_5']
  }
  '/common-lovs/bodies/{bodyId}': {
    put: operations['createOrUpdate_6']
  }
  '/common-lovs/bodies': {
    put: operations['createOrUpdate_7']
  }
  '/common-lovs/transmissions/search': {
    post: operations['searchTransmissions']
  }
  '/common-lovs/tire-sizes/search': {
    post: operations['searchTireSizes']
  }
  '/common-lovs/technical-condition-subcategories/search': {
    post: operations['getSubcategory']
  }
  '/common-lovs/technical-condition-items/search': {
    post: operations['getItems']
  }
  '/common-lovs/technical-condition-categories/search': {
    post: operations['getCategories']
  }
  '/common-lovs/standard-repairs/search': {
    post: operations['searchStandardRepairs']
  }
  '/common-lovs/models/search': {
    post: operations['getModels']
  }
  '/common-lovs/model-lines/search': {
    post: operations['getModelLines']
  }
  '/common-lovs/makes/search': {
    post: operations['searchMakes']
  }
  '/common-lovs/fuel-types/search': {
    post: operations['searchFuelTypes']
  }
  '/common-lovs/extended-models/search': {
    post: operations['searchModels']
  }
  '/common-lovs/ev-types/search': {
    post: operations['searchEvTypes']
  }
  '/common-lovs/engines/search': {
    post: operations['getEngines']
  }
  '/common-lovs/drives/search': {
    post: operations['searchCarDrives']
  }
  '/common-lovs/document-templates/search': {
    post: operations['searchDocumentTemplates']
  }
  '/common-lovs/countries/search': {
    post: operations['searchCountries']
  }
  '/common-lovs/colors/search': {
    post: operations['searchColors']
  }
  '/common-lovs/car-feature-items/search': {
    post: operations['getCarFeatureItems']
  }
  '/common-lovs/bodies/search': {
    post: operations['searchBodies']
  }
  '/common-lovs/technical-condition-sections': {
    get: operations['getSections']
  }
  '/common-lovs/post-codes': {
    get: operations['getCities']
  }
  '/common-lovs/makes': {
    get: operations['getMakes']
  }
  '/common-lovs/fuel-types': {
    get: operations['getFuelTypes']
  }
  '/common-lovs/emission-norms': {
    get: operations['getEmissionNorms']
  }
  '/common-lovs/document-types': {
    get: operations['getDocumentTypes']
  }
  '/common-lovs/countries': {
    get: operations['getCountries']
  }
  '/common-lovs/colors': {
    get: operations['getColors']
  }
  '/common-lovs/car-lengths': {
    get: operations['getCarLengths']
  }
  '/common-lovs/car-heights': {
    get: operations['getCarHeights']
  }
  '/common-lovs/car-feature-sections': {
    get: operations['getCarFeatureSections']
  }
  '/common-lovs/car-feature-categories': {
    get: operations['getCarFeatureCategories']
  }
  '/common-lovs/bonuses-maluses': {
    get: operations['getBonusesMaluses']
  }
}

export interface components {
  schemas: {
    CreateOrUpdateTransmissionRequest: {
      name: string
      active: boolean
    }
    TransmissionItemResponse: {
      id: string
      active: boolean
      name?: string
    }
    CreateOrUpdateCarDriveRequest: {
      name: string
      active: boolean
    }
    CarDriveResponse: {
      id: string
      name: string
      active: boolean
    }
    CreateOrUpdateCarTypeRequest: {
      name: string
    }
    CarTypeItemResponse: {
      id: string
      name: string
    }
    CreateOrUpdateBodyRequest: {
      name: string
      active: boolean
      code: 'PERSONAL' | 'VAN'
    }
    BodyItemResponse: {
      id: string
      name: string
      active: boolean
      code: string
    }
    TransmissionSearchFilter: {
      ids: string[]
    }
    SimplePageTransmissionItemResponse: {
      content: components['schemas']['TransmissionItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    TireSizeSearchFilter: {
      names: string[]
      nameLike?: string
    }
    SimplePageTireSizeResponse: {
      content: components['schemas']['TireSizeResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    TireSizeResponse: {
      id: string
      name?: string
    }
    TechnicalConditionSubcategoryFilter: {
      ids: string[]
      name?: string
      categoryIds?: string[]
      active?: boolean
      other?: boolean
    }
    TechnicalConditionSubcategoryFilterWrapper: {
      filter?: components['schemas']['TechnicalConditionSubcategoryFilter']
    }
    SimplePageTechnicalConditionSubcategoryResponse: {
      content: components['schemas']['TechnicalConditionSubcategoryResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    TechnicalConditionSubcategoryResponse: {
      id: string
      name?: string
      categoryId?: string
      active: boolean
      other?: boolean
      /** Format: int32 */
      order?: number
    }
    TechnicalConditionItemFilter: {
      ids: string[]
      name?: string
      subcategoryIds?: string[]
      active?: boolean
    }
    TechnicalConditionItemFilterWrapper: {
      filter?: components['schemas']['TechnicalConditionItemFilter']
    }
    SimplePageTechnicalConditionItemResponse: {
      content: components['schemas']['TechnicalConditionItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    TechnicalConditionItemResponse: {
      id: string
      name?: string
      subcategoryId?: string
      active: boolean
      /** Format: int32 */
      order?: number
    }
    TechnicalConditionCategoryFilter: {
      ids: string[]
      name?: string
      sectionIds?: string[]
      active?: boolean
    }
    TechnicalConditionCategoryFilterWrapper: {
      filter?: components['schemas']['TechnicalConditionCategoryFilter']
    }
    SimplePageTechnicalConditionCategoryResponse: {
      content: components['schemas']['TechnicalConditionCategoryResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    TechnicalConditionCategoryResponse: {
      id: string
      name?: string
      sectionId?: string
      active: boolean
      /** Format: int32 */
      order?: number
      type?: string
    }
    StandardRepairFilter: {
      ids: string[]
      active?: boolean
    }
    SimplePageStandardRepairResponse: {
      content: components['schemas']['StandardRepairResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    StandardRepairResponse: {
      id: string
      categoryId?: string
      name?: string
      expectedRepairCostEur: number
      active: boolean
    }
    ModelFilter: {
      ids: string[]
      name?: string
      makeIds?: string[]
      active?: boolean
      featured?: boolean
      /** Format: int32 */
      yearFromFrom?: number
      /** Format: int32 */
      yearFromTo?: number
      yearFromIncludeNull: boolean
      /** Format: int32 */
      yearToFrom?: number
      /** Format: int32 */
      yearToTo?: number
      yearToIncludeNull?: boolean
    }
    ModelFilterWrapper: {
      filter?: components['schemas']['ModelFilter']
    }
    ModelItemResponse: {
      id: string
      name?: string
      makeId?: string
      active: boolean
      featured?: boolean
      /** Format: int32 */
      yearFrom?: number
      /** Format: int32 */
      yearTo?: number
      carTypeId?: string
    }
    SimplePageModelItemResponse: {
      content: components['schemas']['ModelItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    ModelLineFilter: {
      ids: string[]
      name?: string
      modelIds?: string[]
      makeIds?: string[]
      /** Format: int32 */
      yearFromFrom?: number
      /** Format: int32 */
      yearFromTo?: number
      yearFromIncludeNull: boolean
      /** Format: int32 */
      yearToFrom?: number
      /** Format: int32 */
      yearToTo?: number
      yearToIncludeNull?: boolean
    }
    ModelLineFilterWrapper: {
      filter: components['schemas']['ModelLineFilter']
    }
    ModelLineResponse: {
      id: string
      modelId?: string
      makeId?: string
      name?: string
      /** Format: int32 */
      classification?: number
      /** Format: int32 */
      yearFrom?: number
      /** Format: int32 */
      yearTo?: number
    }
    SimplePageModelLineResponse: {
      content: components['schemas']['ModelLineResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    MakeSearchFilter: {
      ids: string[]
    }
    MakeItemResponse: {
      id: string
      name?: string
      active: boolean
      featured?: boolean
      /** Format: int32 */
      popularity?: number
      svgIcon?: string
    }
    SimplePageMakeItemResponse: {
      content: components['schemas']['MakeItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    FuelTypeFilter: {
      active?: boolean
      alternative?: boolean
      ids: string[]
      engineFuelType?: boolean
      engineAlternativeFuelType?: boolean
      carAdditionalFuelType?: boolean
    }
    FuelTypeFilterWrapper: {
      filter?: components['schemas']['FuelTypeFilter']
    }
    FuelTypeItemResponse: {
      id: string
      active: boolean
      alternative?: boolean
      preferredPrimaryFuelTypeIds: string[]
      engineFuelType?: boolean
      engineAlternativeFuelType?: boolean
      carAdditionalFuelType?: boolean
      name?: string
    }
    SimplePageFuelTypeItemResponse: {
      content: components['schemas']['FuelTypeItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    ExtendedModelFilter: {
      ids: string[]
      name: string
      makeIds?: string[]
      modelIds?: string[]
      active: boolean
      /** Format: int32 */
      yearFromFrom: number
      /** Format: int32 */
      yearFromTo?: number
      yearFromIncludeNull: boolean
      /** Format: int32 */
      yearToFrom?: number
      /** Format: int32 */
      yearToTo?: number
      yearToIncludeNull: boolean
      /** Format: int32 */
      modelYearFrom?: number
      /** Format: int32 */
      modelYearTo?: number
      modelYearIncludeNull: boolean
    }
    ExtendedModelFilterWrapper: {
      filter: components['schemas']['ExtendedModelFilter']
    }
    ExtendedModelItemResponse: {
      id: string
      name: string
      makeId: string
      modelId: string
      active: boolean
      /** Format: int32 */
      yearFrom: number
      /** Format: int32 */
      yearTo?: number
      /** Format: int32 */
      modelYear?: number
    }
    SimplePageExtendedModelItemResponse: {
      content: components['schemas']['ExtendedModelItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    EvTypesSearchFilter: {
      ids: string[]
      active: boolean
    }
    EvTypeResponse: {
      id: string
      name: string
      active: boolean
    }
    SimplePageEvTypeResponse: {
      content: components['schemas']['EvTypeResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    EngineFilter: {
      ids: string[]
      modelIds?: string[]
      makeIds?: string[]
      /** Format: int32 */
      cylindersFrom?: number
      /** Format: int32 */
      cylindersTo?: number
      active?: boolean
      /** Format: int32 */
      yearFromFrom?: number
      /** Format: int32 */
      yearFromTo?: number
      yearFromIncludeNull: boolean
      /** Format: int32 */
      yearToFrom?: number
      /** Format: int32 */
      yearToTo?: number
      yearToIncludeNull?: boolean
      volumeCcmFrom?: number
      volumeCcmTo?: number
      powerKwFrom?: number
      powerKwTo?: number
      powerPsFrom?: number
      powerPsTo?: number
      fuelTypeIds?: string[]
      altFuelTypeIds?: string[]
      evTypeIds?: string[]
    }
    EngineFilterWrapper: {
      filter?: components['schemas']['EngineFilter']
    }
    EngineItemResponse: {
      id: string
      name?: string
      makeId?: string
      modelId?: string
      /** Format: int32 */
      cylinders: number
      active: boolean
      /** Format: int32 */
      yearFrom?: number
      /** Format: int32 */
      yearTo?: number
      volume?: string
      volumeCcm: number
      powerKw?: number
      powerPs?: number
      fuelTypeId?: string
      altFuelTypeId?: string
      risky?: boolean
      /** Format: int32 */
      grading?: number
      turbo?: string
      evTypeId?: string
    }
    SimplePageEngineItemResponse: {
      content: components['schemas']['EngineItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages?: number
    }
    CarDriveSearchFilter: {
      ids: string[]
      active: boolean
    }
    SimplePageCarDriveResponse: {
      content: components['schemas']['CarDriveResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    DocumentTemplateFilter: {
      customerType?: 'COMPANY' | 'SELF_EMPLOYED' | 'PERSON'
      documentTypes: string[]
      vatCompany?: boolean
      includeWithoutVatCompany: boolean
      vatCar?: boolean
      includeWithoutVatCar?: boolean
      buyerSigned?: boolean
      excludeWithCustomerType?: boolean
    }
    DocumentTemplateFilterWrapper: {
      filter?: components['schemas']['DocumentTemplateFilter']
    }
    DocumentTemplateResponse: {
      id: string
      name?: string
      languageCode?: string
      customerType: 'COMPANY' | 'SELF_EMPLOYED' | 'PERSON'
      documentType?: string
      vatCompany?: boolean
      vatCar?: boolean
      buyerSigned?: boolean
    }
    SimplePageDocumentTemplateResponse: {
      content: components['schemas']['DocumentTemplateResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    CountrySearchFilter: {
      ids: string[]
    }
    CountryItemResponse: {
      id: string
      name?: string
      isoCode?: string
    }
    SimplePageCountryItemResponse: {
      content: components['schemas']['CountryItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    ColorSearchFilter: {
      ids: string[]
      active: boolean
    }
    ColorItemResponse: {
      id: string
      name: string
      /** Format: int32 */
      order: number
      svgIcon: string
      active: boolean
    }
    SimplePageColorItemResponse: {
      content: components['schemas']['ColorItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages?: number
    }
    CarFeatureItemFilter: {
      ids: string[]
      name?: string
      categoryIds?: string[]
      active?: boolean
      favourite?: boolean
      categoryIdIncludeNull: boolean
    }
    CarFeatureItemFilterWrapper: {
      filter?: components['schemas']['CarFeatureItemFilter']
    }
    CarFeatureItemResponse: {
      id: string
      categoryId?: string
      active: boolean
      favourite?: boolean
      name?: string
    }
    SimplePageCarFeatureItemResponse: {
      content: components['schemas']['CarFeatureItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    BodiesSearchFilter: {
      ids: string[]
      modelIds?: string[]
      makeIds?: string[]
      active: boolean
    }
    SimplePageBodyItemResponse: {
      content: components['schemas']['BodyItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    SimplePageTechnicalConditionSectionResponse: {
      content: components['schemas']['TechnicalConditionSectionResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    TechnicalConditionSectionResponse: {
      id: string
      active: boolean
      svgIcon?: string
      /** Format: int32 */
      order?: number
      name?: string
    }
    CityResponse: {
      id: string
      city?: string
      countryId?: string
    }
    SimplePageCityResponse: {
      content: components['schemas']['CityResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    EmissionNormResponse: {
      id: string
      name?: string
    }
    SimplePageEmissionNormResponse: {
      content: components['schemas']['EmissionNormResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    DocumentTypeResponse: {
      type: string
      name?: string
      internal: boolean
      toPrint?: boolean
      /** Format: int32 */
      orderInBuyingGuide: number
      requiredForDeal?: boolean
      postBuying?: boolean
    }
    SimplePageDocumentTypeResponse: {
      content: components['schemas']['DocumentTypeResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    CarLengthItemResponse: {
      id: string
      name?: string
      active: boolean
    }
    SimplePageCarLengthItemResponse: {
      content: components['schemas']['CarLengthItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    CarHeightItemResponse: {
      id: string
      name?: string
      active: boolean
    }
    SimplePageCarHeightItemResponse: {
      content: components['schemas']['CarHeightItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    CarFeatureSectionItemResponse: {
      id: string
      active: boolean
      name?: string
    }
    SimplePageCarFeatureSectionItemResponse: {
      content: components['schemas']['CarFeatureSectionItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    CarFeatureCategoryResponse: {
      id: string
      sectionId?: string
      active: boolean
      name?: string
    }
    SimplePageCarFeatureCategoryResponse: {
      content: components['schemas']['CarFeatureCategoryResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    BonusMalusItemResponse: {
      id: string
      type: 'BONUS' | 'MALUS'
      active: boolean
      name?: string
    }
    SimplePageBonusMalusItemResponse: {
      content: components['schemas']['BonusMalusItemResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
  }
}

export interface operations {
  getTransmissions: {
    parameters: {
      query: {
        active?: boolean
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTransmissionItemResponse']
        }
      }
    }
  }
  createOrUpdate: {
    parameters: {
      path: {
        transmissionId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TransmissionItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateTransmissionRequest']
      }
    }
  }
  createOrUpdate_1: {
    parameters: {
      path: {
        transmissionId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['TransmissionItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateTransmissionRequest']
      }
    }
  }
  createOrUpdate_2: {
    parameters: {
      path: {
        carDriveId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarDriveResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateCarDriveRequest']
      }
    }
  }
  getCarDrives: {
    parameters: {
      query: {
        active?: boolean
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarDriveResponse'][]
        }
      }
    }
  }
  createOrUpdate_3: {
    parameters: {
      path: {
        carDriveId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarDriveResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateCarDriveRequest']
      }
    }
  }
  getCarTypes: {
    parameters: {
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarTypeItemResponse'][]
        }
      }
    }
  }
  createOrUpdate_4: {
    parameters: {
      path: {
        carTypeId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarTypeItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateCarTypeRequest']
      }
    }
  }
  createOrUpdate_5: {
    parameters: {
      path: {
        carTypeId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CarTypeItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateCarTypeRequest']
      }
    }
  }
  createOrUpdate_6: {
    parameters: {
      path: {
        bodyId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['BodyItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateBodyRequest']
      }
    }
  }
  createOrUpdate_7: {
    parameters: {
      path: {
        bodyId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['BodyItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrUpdateBodyRequest']
      }
    }
  }
  searchTransmissions: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTransmissionItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TransmissionSearchFilter']
      }
    }
  }
  searchTireSizes: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTireSizeResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TireSizeSearchFilter']
      }
    }
  }
  getSubcategory: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTechnicalConditionSubcategoryResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TechnicalConditionSubcategoryFilterWrapper']
      }
    }
  }
  getItems: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTechnicalConditionItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TechnicalConditionItemFilterWrapper']
      }
    }
  }
  getCategories: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTechnicalConditionCategoryResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['TechnicalConditionCategoryFilterWrapper']
      }
    }
  }
  searchStandardRepairs: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageStandardRepairResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['StandardRepairFilter']
      }
    }
  }
  getModels: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageModelItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ModelFilterWrapper']
      }
    }
  }
  getModelLines: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageModelLineResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ModelLineFilterWrapper']
      }
    }
  }
  searchMakes: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageMakeItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['MakeSearchFilter']
      }
    }
  }
  searchFuelTypes: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageFuelTypeItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['FuelTypeFilterWrapper']
      }
    }
  }
  searchModels: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageExtendedModelItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ExtendedModelFilterWrapper']
      }
    }
  }
  searchEvTypes: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageEvTypeResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['EvTypesSearchFilter']
      }
    }
  }
  getEngines: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageEngineItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['EngineFilterWrapper']
      }
    }
  }
  searchCarDrives: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarDriveResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CarDriveSearchFilter']
      }
    }
  }
  searchDocumentTemplates: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageDocumentTemplateResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['DocumentTemplateFilterWrapper']
      }
    }
  }
  searchCountries: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCountryItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CountrySearchFilter']
      }
    }
  }
  searchColors: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageColorItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ColorSearchFilter']
      }
    }
  }
  getCarFeatureItems: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarFeatureItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CarFeatureItemFilterWrapper']
      }
    }
  }
  searchBodies: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageBodyItemResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['BodiesSearchFilter']
      }
    }
  }
  getSections: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
        active?: boolean
        hasSvgIcon?: boolean
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageTechnicalConditionSectionResponse']
        }
      }
    }
  }
  getCities: {
    parameters: {
      query: {
        ids?: string[]
        countryIds?: string[]
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCityResponse']
        }
      }
    }
  }
  getMakes: {
    parameters: {
      query: {
        active?: boolean
        featured?: boolean
        hasPopularity?: boolean
        hasSvgIcon?: boolean
        id?: string
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageMakeItemResponse']
        }
      }
    }
  }
  getFuelTypes: {
    parameters: {
      query: {
        active?: boolean
        alternative?: boolean
        ids?: string[]
        engineFuelType?: boolean
        engineAlternativeFuelType?: boolean
        carAdditionalFuelType?: boolean
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageFuelTypeItemResponse']
        }
      }
    }
  }
  getEmissionNorms: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
        name?: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageEmissionNormResponse']
        }
      }
    }
  }
  getDocumentTypes: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
        internal?: boolean
        postBuying?: boolean
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageDocumentTypeResponse']
        }
      }
    }
  }
  getCountries: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCountryItemResponse']
        }
      }
    }
  }
  getColors: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
        active?: boolean
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageColorItemResponse']
        }
      }
    }
  }
  getCarLengths: {
    parameters: {
      query: {
        active?: boolean
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarLengthItemResponse']
        }
      }
    }
  }
  getCarHeights: {
    parameters: {
      query: {
        active?: boolean
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarHeightItemResponse']
        }
      }
    }
  }
  getCarFeatureSections: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
        active?: boolean
        ids?: string[]
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarFeatureSectionItemResponse']
        }
      }
    }
  }
  getCarFeatureCategories: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
        active?: boolean
        ids?: string[]
        sectionIds?: string[]
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCarFeatureCategoryResponse']
        }
      }
    }
  }
  getBonusesMaluses: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
        active?: boolean
      }
      header: {
        'Accept-Language'?: unknown
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageBonusMalusItemResponse']
        }
      }
    }
  }
}

export interface external {}

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/admin/customers': {
    post: operations['createCustomer']
  }
  '/admin/customers/{customerId}/agents': {
    post: operations['createAgent']
  }
  '/admin/customers/search': {
    post: operations['searchCustomer']
  }
  '/admin/customers/agents/search': {
    post: operations['searchAgent']
  }
  '/admin/customers/{customerId}': {
    get: operations['getCustomerDetails']
    patch: operations['patchCustomer']
  }
  '/admin/customers/agents/{agentId}': {
    delete: operations['deleteAgent']
    patch: operations['patchAgent']
  }
}

export interface components {
  schemas: {
    AdminCreateCompanyInput: {
      name: string
      regNo?: string
      vatNo?: string
      vatRegistered?: boolean
    }
    AdminCreateCustomerCommand: {
      email: string
      type: 'COMPANY' | 'SELF_EMPLOYED' | 'PERSON'
      company?: components['schemas']['AdminCreateCompanyInput']
      person?: components['schemas']['AdminCreatePersonInput']
      preferredLanguage?: string
      contractType?: 'DRIVERAMA' | 'SUPPLIER'
    }
    AdminCreatePersonInput: {
      firstName?: string
      surname?: string
      phonePrefix: string
      phoneNumber: string
      organizationalLevel?: 'AGENT' | 'EXECUTIVE'
    }
    ErrorResponse: {
      message: string[]
      code: string
    }
    AddressResponse: {
      /** Format: uuid */
      id?: string
      address?: string
      street?: string
      streetNo?: string
      postCode?: string
      town?: string
      country?: string
    }
    CompanyResponse: {
      /** Format: uuid */
      id?: string
      name?: string
      regNo?: string
      vatRegistered?: boolean
      vatNo?: string
      address?: components['schemas']['AddressResponse']
    }
    ContactResponse: {
      type: 'EMAIL'
      email?: string
      isPrimary: boolean
    }
    CustomerResponse: {
      /** Format: uuid */
      id: string
      email?: string
      type?: 'COMPANY' | 'SELF_EMPLOYED' | 'PERSON'
      gender?: 'MALE' | 'FEMALE' | 'OTHER'
      person?: components['schemas']['PersonResponse']
      company?: components['schemas']['CompanyResponse']
      contact: components['schemas']['ContactResponse'][]
      preferredLanguage?: string
      contractType?: 'DRIVERAMA' | 'SUPPLIER'
    }
    PersonResponse: {
      /** Format: uuid */
      id?: string
      firstName: string
      surname?: string
      /** Format: date */
      dateOfBirth: string
      phonePrefix?: string
      phoneNumber?: string
      address: components['schemas']['AddressResponse']
      organizationalLevel: 'AGENT' | 'EXECUTIVE'
      /** Format: date */
      idExpirationDate?: string
    }
    CreateAgentCommand: {
      name: string
      /** Format: date */
      dateOfBirth: string
      function?: 'AGENT' | 'EXECUTIVE'
      email?: string
      phonePrefix?: string
      phoneNumber?: string
    }
    AgentResponse: {
      /** Format: uuid */
      id: string
      /** Format: uuid */
      customerId?: string
      name: string
      /** Format: date */
      dateOfBirth: string
      function?: 'AGENT' | 'EXECUTIVE'
      email?: string
      phonePrefix?: string
      phoneNumber?: string
    }
    CustomerFilter: {
      ids: string[]
      phone?: string
      email?: string
      fullText?: string
      fullTextArgs: string[]
    }
    CustomerFilterWrapper: {
      filter?: components['schemas']['CustomerFilter']
    }
    CustomerCompanySearchResponse: {
      name?: string
      regNo?: string
      vatNo?: string
      vatRegistered?: boolean
    }
    CustomerPersonSearchResponse: {
      firstName?: string
      surname?: string
      phonePrefix?: string
      phoneNumber?: string
      /** Format: date */
      idExpirationDate?: string
    }
    CustomerSearchResponse: {
      /** Format: uuid */
      id: string
      type?: 'COMPANY' | 'SELF_EMPLOYED' | 'PERSON'
      gender?: 'MALE' | 'FEMALE' | 'OTHER'
      email?: string
      person?: components['schemas']['CustomerPersonSearchResponse']
      company?: components['schemas']['CustomerCompanySearchResponse']
    }
    SimplePageCustomerSearchResponse: {
      content: components['schemas']['CustomerSearchResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    AgentSearchFilter: {
      ids: string[]
      customerIds?: string[]
    }
    SimplePageAgentResponse: {
      content: components['schemas']['AgentResponse'][]
      /** Format: int64 */
      totalElements: number
      /** Format: int32 */
      totalPages: number
    }
    /** @description address */
    AddressInput: {
      /** @description Full Address */
      address?: string
      /** @description Street name */
      street?: string
      /** @description Street number */
      streetNo?: string
      /** @description Post code */
      postCode: string
      /** @description Town */
      town: string
      country?: string
    }
    AdminPatchCustomerRequest: {
      email?: string
      company?: components['schemas']['PatchCompanyInput']
      person?: components['schemas']['PersonInput']
      /** @description Customer contacts */
      contacts: components['schemas']['ContactInput'][]
      type?: 'COMPANY' | 'SELF_EMPLOYED' | 'PERSON'
      gender?: 'MALE' | 'FEMALE' | 'OTHER'
      /** @description Customer preferred language */
      preferredLanguage?: string
      contractType?: 'DRIVERAMA' | 'SUPPLIER'
    }
    /** @description Customer contacts */
    ContactInput: {
      type: 'EMAIL'
      email: string
      primary: boolean
    }
    /** @description Customer company. Available for customers of type COMPANY|SELF_EMPLOYED */
    PatchCompanyInput: {
      /** @description Company name */
      name?: string
      /** @description Registration number */
      regNo?: string
      /** @description VAT */
      vatNo?: string
      vatRegistered?: boolean
      address?: components['schemas']['AddressInput']
    }
    /** @description Customer person information */
    PersonInput: {
      /** @description First Name */
      firstName?: string
      /** @description Surname */
      surname?: string
      /**
       * Format: date
       * @description Date of birth
       */
      dateOfBirth?: string
      /** @description Phone prefix */
      phonePrefix?: string
      /** @description Phone number */
      phoneNumber?: string
      address?: components['schemas']['AddressInput']
      organizationalLevel?: 'AGENT' | 'EXECUTIVE'
      /** Format: date */
      idExpirationDate?: string
    }
    PatchAgentCommand: {
      name?: string
      /** Format: date */
      dateOfBirth?: string
      function?: 'AGENT' | 'EXECUTIVE'
      email?: string
      phonePrefix?: string
      phoneNumber?: string
    }
  }
}

export interface operations {
  createCustomer: {
    parameters: {
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CustomerResponse']
        }
      }
      /** Bad Request */
      400: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['ErrorResponse']
        }
      }
      /** Conflict */
      409: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AdminCreateCustomerCommand']
      }
    }
  }
  createAgent: {
    parameters: {
      path: {
        customerId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** Created */
      201: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AgentResponse']
        }
      }
      /** Not Found */
      404: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateAgentCommand']
      }
    }
  }
  searchCustomer: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageCustomerSearchResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CustomerFilterWrapper']
      }
    }
  }
  searchAgent: {
    parameters: {
      query: {
        /** Zero-based page index (0..N) */
        page?: number
        /** The size of the page to be returned */
        size?: number
        /** Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported. */
        sort?: string[]
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['SimplePageAgentResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AgentSearchFilter']
      }
    }
  }
  getCustomerDetails: {
    parameters: {
      path: {
        customerId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CustomerResponse']
        }
      }
      /** Not Found */
      404: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  patchCustomer: {
    parameters: {
      path: {
        customerId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['CustomerResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AdminPatchCustomerRequest']
      }
    }
  }
  deleteAgent: {
    parameters: {
      path: {
        agentId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** No Content */
      204: never
    }
  }
  patchAgent: {
    parameters: {
      path: {
        agentId: string
      }
      header: {
        'X-Platform'?: unknown
        'User-Agent'?: unknown
        'X-Install-UUID'?: unknown
        'Accept-Language'?: unknown
        Accept?: unknown
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['AgentResponse']
        }
      }
      /** Not Found */
      404: {
        content: {
          'application/com.driverama-v1+json': components['schemas']['ErrorResponse']
        }
      }
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['PatchAgentCommand']
      }
    }
  }
}

export interface external {}

variables:
  DOCKER_DRIVER: overlay2
  ROLLOUT_RESOURCE_TYPE: deployment
  DOCKER_TLS_CERTDIR: ''

  # Shallow clone git repository for performance
  # Extended for Nx to be able to perform diff
  # between MR and target repository
  GIT_DEPTH: 20

  # disable installation of binary all the time
  # enable for jobs, which require cypress
  CYPRESS_INSTALL_BINARY: 0

  # # To speed-up yarn, we want to cache node_modules
  # # across different pipeline builds
  # # This should not affect env configuration
  # GIT_CLEAN_FLAGS: -ffdx --exclude=node_modules --exclude=.yarn/cache

.rules-mr:
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "staging"
      when: never
    - if: $CI_MERGE_REQUEST_ID

.rules-devel:
  rules:
    - if: $CI_COMMIT_BRANCH == "master"

.rules-staging:
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"

.rules-production:
  rules:
    - if: $CI_COMMIT_BRANCH == "production"

.rules-env:
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "staging"
    - if: $CI_COMMIT_BRANCH == "production"

.rules-all:
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "staging"
      when: never
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "staging"
    - if: $CI_COMMIT_BRANCH == "production"
    - if: $CI_MERGE_REQUEST_ID

.yarn-cache:
  cache:
    - key:
        files:
          - yarn.lock
      paths:
        - .yarn/cache
      policy: pull
    - key: $CI_COMMIT_REF_SLUG
      # add other projects if needed
      paths:
        - .next/cache

# =====================================
# Within app instance gitlab-ci.yml provide these variables:
# - in jobs:
#       ENVIRONMENT (development | staging | production)
#       KUBERNETES_NAMESPACE (check namespace in LENS)
# =====================================
# Build Next.js
# =====================================
.build:
  image: registry.gitlab.driverama.com/data-driven-buying/frontend/containers/kubectl-web-build-container:16
  stage: build
  interruptible: true
  before_script:
    - yarn install --immutable
    - yarn env --environment $ENVIRONMENT
  script:
    - yarn build
  variables:
    NODE_OPTIONS: '--max-old-space-size=4096'
  artifacts:
    paths:
      - .next
      - public
    exclude:
      - .next/cache
    expire_in: 2 weeks

# =====================================
# Docker
# =====================================
.docker:
  interruptible: true
  stage: docker
  tags:
    - docker
  variables:
    BUILDKIT_HOST: tcp://buildkitd:1234
    CACHE_IMAGE_TAG: ${CI_REGISTRY_IMAGE}/ticking-web/${CI_COMMIT_REF_SLUG}-cache:${CI_COMMIT_SHA}
    COMMIT_IMAGE_TAG: ${CI_REGISTRY_IMAGE}/ticking-web/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}
    CREATE_LATEST_TAG: 'true'
  image:
    name: moby/buildkit:v0.10.3-rootless
    entrypoint: ['sh', '-c']
  services:
    - alias: buildkitd
      name: moby/buildkit:v0.10.3-rootless
      command:
        - '--oci-worker-no-process-sandbox'
        - '--addr'
        - 'tcp://0.0.0.0:1234'
  script:
    # credentials
    - mkdir -p $HOME/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > $HOME/.docker/config.json
    # resolve what tags to build
    - >
      export DOCKER_TAGS="$COMMIT_IMAGE_TAG";
      if [ "$CREATE_LATEST_TAG" == "true" ]; then
        export DOCKER_TAGS="$COMMIT_IMAGE_TAG,${CI_REGISTRY_IMAGE}/ticking-web/${CI_COMMIT_REF_SLUG}:latest";
      fi
    # build image
    - buildctl build --frontend=dockerfile.v0 --local context=. --local dockerfile=. --opt filename=Dockerfile --output type=image,\"name=$DOCKER_TAGS\",push=true --export-cache type=registry,ref=$CACHE_IMAGE_TAG,mode=max,compression=zstd --import-cache type=registry,ref=$CACHE_IMAGE_TAG

# =====================================
# Deploy
# =====================================
.deploy:
  interruptible: false
  stage: deploy
  image: registry.gitlab.driverama.com/data-driven-buying/frontend/containers/kubectl-az-container:latest
  script:
    - echo "$KUBERNETES_ENV_FILE_PATH"
    - echo "$KUBERNETES_CONFIG_FOLDER"
    - echo "$KUBERNETES_NAMESPACE"
    - echo "$KUBERNETES_DEPLOYMENT_NAME"
    - kubectl config set-cluster cluster --server=${KUBERNETES_MASTER}
    - kubectl config set-cluster cluster --insecure-skip-tls-verify=true
    - kubectl config set-credentials ${KUBERNETES_SERVICE_ACCOUNT} --token=${KUBERNETES_TOKEN}
    - kubectl config set-context cluster --cluster cluster --user ${KUBERNETES_SERVICE_ACCOUNT} --namespace ${KUBERNETES_NAMESPACE}
    - kubectl config use-context cluster
    - kubectl delete secret env-variables && kubectl create secret generic env-variables --from-env-file=${KUBERNETES_ENV_FILE_PATH}
    - kubectl apply -f ${KUBERNETES_CONFIG_FOLDER}
    - kubectl set image deployments/$KUBERNETES_DEPLOYMENT_NAME $KUBERNETES_DEPLOYMENT_NAME=registry.gitlab.driverama.com/data-driven-buying/frontend/ticking-app/ticking-web/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}

stages:
  - test
  - build
  - docker
  - prepare-deployment-cluster
  - deploy
